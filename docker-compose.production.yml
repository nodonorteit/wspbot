version: '3.8'

services:
  # WAHA - WhatsApp HTTP API
  waha:
    image: devlikeapro/waha
    container_name: waha
    ports:
      - "3000:3000"
    environment:
      - WAHA_ENGINE=WEBJS
      - WAHA_LOG_LEVEL=info
    volumes:
      - waha_data:/app/.waha
    restart: unless-stopped
    networks:
      - wspbot-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.waha.rule=Host(`waha.yourdomain.com`)"
      - "traefik.http.routers.waha.tls=true"
      - "traefik.http.routers.waha.tls.certresolver=letsencrypt"

  # MySQL Database (using MariaDB for better Plesk integration)
  mysql:
    image: mariadb:10.11
    container_name: wspbot-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: wspbot
      MYSQL_USER: wspbot
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./infrastructure/mysql/init:/docker-entrypoint-initdb.d
      - ./infrastructure/mysql/conf:/etc/mysql/conf.d
    restart: unless-stopped
    networks:
      - wspbot-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: wspbot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./infrastructure/redis/redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - wspbot-network
    command: redis-server /usr/local/etc/redis/redis.conf

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: wspbot-api-gateway
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - AUTH_SERVICE_URL=http://auth-service:3001
      - TENANT_SERVICE_URL=http://tenant-service:3002
      - TURNS_SERVICE_URL=http://turns-service:3003
      - WHATSAPP_SERVICE_URL=http://whatsapp-service:3004
      - NOTIFICATIONS_SERVICE_URL=http://notifications-service:3005
    depends_on:
      - auth-service
      - tenant-service
      - turns-service
      - whatsapp-service
      - notifications-service
    restart: unless-stopped
    networks:
      - wspbot-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.yourdomain.com`)"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: wspbot-auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=wspbot_auth
      - DB_USER=wspbot
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    networks:
      - wspbot-network

  # Tenant Service
  tenant-service:
    build:
      context: ./services/tenant-service
      dockerfile: Dockerfile
    container_name: wspbot-tenant-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=wspbot_tenants
      - DB_USER=wspbot
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    networks:
      - wspbot-network

  # Turns Service
  turns-service:
    build:
      context: ./services/turns-service
      dockerfile: Dockerfile
    container_name: wspbot-turns-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=wspbot_turns
      - DB_USER=wspbot
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    networks:
      - wspbot-network

  # WhatsApp Service
  whatsapp-service:
    build:
      context: ./services/whatsapp-service
      dockerfile: Dockerfile
    container_name: wspbot-whatsapp-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - PORT=3004
      - WAHA_BASE_URL=http://waha:3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - waha
      - redis
    restart: unless-stopped
    networks:
      - wspbot-network

  # Notifications Service
  notifications-service:
    build:
      context: ./services/notifications-service
      dockerfile: Dockerfile
    container_name: wspbot-notifications-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - PORT=3005
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=wspbot_notifications
      - DB_USER=wspbot
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WHATSAPP_SERVICE_URL=http://whatsapp-service:3004
    depends_on:
      - mysql
      - redis
      - whatsapp-service
    restart: unless-stopped
    networks:
      - wspbot-network

  # Admin Panel Frontend
  admin-panel:
    build:
      context: ./frontend/admin-panel
      dockerfile: Dockerfile
    container_name: wspbot-admin-panel
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=https://api.yourdomain.com
    depends_on:
      - api-gateway
    restart: unless-stopped
    networks:
      - wspbot-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.rule=Host(`admin.yourdomain.com`)"
      - "traefik.http.routers.admin.tls=true"
      - "traefik.http.routers.admin.tls.certresolver=letsencrypt"

  # Traefik Reverse Proxy
  traefik:
    image: traefik:v2.10
    container_name: wspbot-traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./infrastructure/traefik:/etc/traefik
      - traefik_data:/data
    restart: unless-stopped
    networks:
      - wspbot-network
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/data/acme.json

volumes:
  waha_data:
  mysql_data:
  redis_data:
  traefik_data:

networks:
  wspbot-network:
    driver: bridge
